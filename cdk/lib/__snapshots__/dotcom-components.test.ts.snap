// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Cfn stack matches the snapshot 1`] = `
Object {
  "Mappings": Object {
    "stages": Object {
      "CODE": Object {
        "lower": "code",
      },
      "DEV": Object {
        "lower": "dev",
      },
      "PROD": Object {
        "lower": "prod",
      },
    },
  },
  "Parameters": Object {
    "AMI": Object {
      "Description": "AMI ID to be provded by RiffRaff. Should include Docker at least. Our Amazon Linux 2 Docker recipe is recommended here.",
      "Type": "AWS::EC2::Image::Id",
    },
    "AZs": Object {
      "Description": "List of AZs",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>",
    },
    "App": Object {
      "Type": "String",
    },
    "BaseUrl": Object {
      "Description": "Base URL of the service.",
      "Type": "String",
    },
    "CertificateArn": Object {
      "Type": "String",
    },
    "DockerTag": Object {
      "Description": "Once the s3 artifact is docker loaded, this tag is used to determine which container to start",
      "Type": "String",
    },
    "ELKStream": Object {
      "Description": "Name of the Kinesis stream used to send logs to the central ELK stack.",
      "Type": "String",
    },
    "InstanceClass": Object {
      "Default": "t4g",
      "Type": "String",
    },
    "InstanceSize": Object {
      "Default": "small",
      "Type": "String",
    },
    "KMSKey": Object {
      "Description": "KMS key used to decrypt parameter store secrets",
      "Type": "String",
    },
    "MaxCapacity": Object {
      "Default": 2,
      "Description": "Max capacity of ASG (double normal capacity at least to allow for deploys",
      "Type": "Number",
    },
    "MinCapacity": Object {
      "Default": 1,
      "Description": "Min capacity of ASG. Typically, we want at least 3 instances for PROD for availability purposes, but 1 for CODE.",
      "Type": "Number",
    },
    "PolicyARNs": Object {
      "Description": "ARNs for managed policies you want included in instance role",
      "Type": "CommaDelimitedList",
    },
    "S3Bucket": Object {
      "Description": "Name of S3 bucket where artifact found",
      "Type": "String",
    },
    "S3Key": Object {
      "Description": "S3 key where artifact lives (should be a Docker saved .tar file)",
      "Type": "String",
    },
    "Stack": Object {
      "Default": "frontend",
      "Type": "String",
    },
    "Stage": Object {
      "AllowedValues": Array [
        "CODE",
        "PROD",
      ],
      "Default": "CODE",
      "Description": "Stage name",
      "Type": "String",
    },
    "Subnets": Object {
      "Description": "Subnets where instances will run",
      "Type": "List<AWS::EC2::Subnet::Id>",
    },
    "TargetCPU": Object {
      "Default": 80,
      "Description": "Target CPU, used for autoscaling. Nb. you may want to set this quite low if using Burstable instances such as t3 ones.",
      "Type": "Number",
    },
    "VpcId": Object {
      "Description": "VPC in which instances will run",
      "Type": "AWS::EC2::VPC::Id",
    },
  },
  "Resources": Object {
    "ASG46ED3070": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/ASG/ASG",
      },
      "Properties": Object {
        "HealthCheckGracePeriod": 60,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "ASGLaunchConfigC00AF12B",
        },
        "MaxSize": Object {
          "Ref": "MaxCapacity",
        },
        "MinSize": Object {
          "Ref": "MinCapacity",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "App",
            },
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "23.5.1",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/support-dotcom-components",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Fn::Join": Array [
                "-",
                Array [
                  Object {
                    "Ref": "Stack",
                  },
                  Object {
                    "Ref": "Stage",
                  },
                  Object {
                    "Ref": "App",
                  },
                ],
              ],
            },
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "LBListenerTargetGroupF04FCF6D",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "Subnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "ASGInstanceProfile0A2834D7": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/ASG/InstanceProfile",
      },
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "roleC7B7E775",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "ASGInstanceSecurityGroup0525485D": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/ASG/InstanceSecurityGroup/Resource",
      },
      "Properties": Object {
        "GroupDescription": "AlbEc2Stack/ASG/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": Object {
              "Ref": "App",
            },
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "23.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-dotcom-components",
          },
          Object {
            "Key": "Name",
            "Value": "AlbEc2Stack/ASG",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ASGInstanceSecurityGroupfromAlbEc2StackLBSecurityGroup7075EADF3030EFB7F736": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/ASG/InstanceSecurityGroup/from AlbEc2StackLBSecurityGroup7075EADF:3030",
      },
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3030,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "ASGInstanceSecurityGroup0525485D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LBSecurityGroup8A41EA2B",
            "GroupId",
          ],
        },
        "ToPort": 3030,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ASGLaunchConfigC00AF12B": Object {
      "DependsOn": Array [
        "roleC7B7E775",
      ],
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/ASG/LaunchConfig",
      },
      "Properties": Object {
        "AssociatePublicIpAddress": true,
        "IamInstanceProfile": Object {
          "Ref": "ASGInstanceProfile0A2834D7",
        },
        "ImageId": Object {
          "Ref": "AMI",
        },
        "InstanceType": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "InstanceClass",
              },
              ".",
              Object {
                "Ref": "InstanceSize",
              },
            ],
          ],
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "ASGInstanceSecurityGroup0525485D",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Sub": Array [
              "#!/bin/bash

groupadd support
useradd -r -m -s /usr/bin/nologin -g support dotcom-components
cd /home/dotcom-components

aws --region eu-west-1 s3 cp s3://\${S3Bucket}/support/\${Stage}/\${App}/\${App}.tar ./
mkdir \${App}
tar -xvf \${App}.tar --directory \${App}

chown -R dotcom-components:support \${App}

cd \${App}

export TERM=xterm-256color
export NODE_ENV=production
export stage=\${Stage}
export base_url=\${BaseUrl}

mkdir /var/log/dotcom-components
chown -R dotcom-components:support /var/log/dotcom-components

/usr/local/node/pm2 start --uid dotcom-components --gid support server.js

/opt/aws-kinesis-agent/configure-aws-kinesis-agent \${AWS::Region} \${ELKStream} /var/log/dotcom-components/dotcom-components.log
",
              Object {
                "Stage": Object {
                  "Ref": "Stage",
                },
              },
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "ASGScalingPolicyGTCPUF089F755": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/ASG/ScalingPolicyGTCPU/Resource",
      },
      "Properties": Object {
        "AutoScalingGroupName": Object {
          "Ref": "ASG46ED3070",
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ASGAverageCPUUtilization",
          },
          "TargetValue": Object {
            "Ref": "TargetCPU",
          },
        },
      },
      "Type": "AWS::AutoScaling::ScalingPolicy",
    },
    "DescribeEC2Policy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "roleC7B7E775",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LB8A12904C": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/LB/Resource",
      },
      "Properties": Object {
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "App",
              },
              "-",
              Object {
                "Ref": "Stage",
              },
            ],
          ],
        },
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LBSecurityGroup8A41EA2B",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "Subnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": Object {
              "Ref": "App",
            },
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "23.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-dotcom-components",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LBListener49E825B4": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/LB/Listener/Resource",
      },
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateArn",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "LBListenerTargetGroupF04FCF6D",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LB8A12904C",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LBListenerTargetGroupF04FCF6D": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/LB/Listener/TargetGroup/Resource",
      },
      "Properties": Object {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckTimeoutSeconds": 10,
        "HealthyThresholdCount": 2,
        "Port": 3030,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": Object {
              "Ref": "App",
            },
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "23.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-dotcom-components",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 5,
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "LBSecurityGroup8A41EA2B": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/LB/SecurityGroup/Resource",
      },
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB AlbEc2StackLB93E8F97D",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": Object {
              "Ref": "App",
            },
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "23.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-dotcom-components",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LBSecurityGrouptoAlbEc2StackASGInstanceSecurityGroupEE06B44E303026BD048F": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/LB/SecurityGroup/to AlbEc2StackASGInstanceSecurityGroupEE06B44E:3030",
      },
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "ASGInstanceSecurityGroup0525485D",
            "GroupId",
          ],
        },
        "FromPort": 3030,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LBSecurityGroup8A41EA2B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3030,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "roleC7B7E775": Object {
      "Metadata": Object {
        "aws:cdk:path": "AlbEc2Stack/role/Resource",
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "s3:GetObject",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Sub": Array [
                        "arn:aws:s3:::support-admin-console/\${Stage}/banner-deploy/*",
                        Object {
                          "Stage": Object {
                            "Ref": "Stage",
                          },
                        },
                      ],
                    },
                    Object {
                      "Fn::Sub": Array [
                        "arn:aws:s3:::support-admin-console/\${Stage}/channel-switches.json",
                        Object {
                          "Stage": Object {
                            "Ref": "Stage",
                          },
                        },
                      ],
                    },
                    Object {
                      "Fn::Sub": Array [
                        "arn:aws:s3:::gu-contributions-public/epic/\${Stage}/*",
                        Object {
                          "Stage": Object {
                            "Ref": "Stage",
                          },
                        },
                      ],
                    },
                    Object {
                      "Fn::Sub": Array [
                        "arn:aws:s3:::gu-contributions-public/banner/\${Stage}/*",
                        Object {
                          "Stage": Object {
                            "Ref": "Stage",
                          },
                        },
                      ],
                    },
                    Object {
                      "Fn::Sub": Array [
                        "arn:aws:s3:::gu-contributions-public/super-mode/\${Stage}/*",
                        Object {
                          "Stage": Object {
                            "Ref": "Stage",
                          },
                        },
                      ],
                    },
                    "arn:aws:s3::*:membership-dist/*",
                  ],
                },
                Object {
                  "Action": "dynamodb:*",
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Sub": Array [
                        "arn:aws:dynamodb:*:\${AWS::AccountId}:table/super-mode-\${Stage}",
                        Object {
                          "Stage": Object {
                            "Ref": "Stage",
                          },
                        },
                      ],
                    },
                    Object {
                      "Fn::Sub": Array [
                        "arn:aws:dynamodb:*:\${AWS::AccountId}:table/super-mode-\${Stage}/index/*",
                        Object {
                          "Stage": Object {
                            "Ref": "Stage",
                          },
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Action": Array [
                    "s3:Get*",
                    "s3:List*",
                    "s3:HeadObject",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:aws:s3:::",
                          Object {
                            "Ref": "S3Bucket",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:aws:s3:::",
                          Object {
                            "Ref": "S3Bucket",
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                },
                Object {
                  "Action": Array [
                    "ec2messages:AcknowledgeMessage",
                    "ec2messages:DeleteMessage",
                    "ec2messages:FailMessage",
                    "ec2messages:GetEndpoint",
                    "ec2messages:GetMessages",
                    "ec2messages:SendReply",
                    "ssm:UpdateInstanceInformation",
                    "ssm:ListInstanceAssociations",
                    "ssm:DescribeInstanceProperties",
                    "ssm:DescribeDocumentParameters",
                    "ssmmessages:CreateControlChannel",
                    "ssmmessages:CreateDataChannel",
                    "ssmmessages:OpenControlChannel",
                    "ssmmessages:OpenDataChannel",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "ssm:GetParametersByPath",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:ssm:eu-west-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":parameter/",
                        Object {
                          "Ref": "App",
                        },
                        "/",
                        Object {
                          "Fn::FindInMap": Array [
                            "stages",
                            Object {
                              "Ref": "Stage",
                            },
                            "lower",
                          ],
                        },
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "kms:Decrypt",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Ref": "KMSKey",
                  },
                },
                Object {
                  "Action": "kinesis:Put*",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Sub": "arn:aws:kinesis:*:\${AWS::AccountId}:stream/\${ELKStream}",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "required",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": Object {
              "Ref": "App",
            },
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "23.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-dotcom-components",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
